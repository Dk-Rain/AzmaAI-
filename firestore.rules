
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAdmin() {
      // Check if the user document exists and the role is 'Admin'.
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    match /users/{userId} {
      // Users can only read/write their own data, Admins can manage all users.
      allow read, write: if request.auth.uid == userId || isAdmin();
    }
    
    match /workspaces/{userId} {
      // Users can only read/write their own workspace data, Admins can manage all.
      allow read, write: if request.auth.uid == userId || isAdmin();
    }

    match /transactions/{transactionId} {
      // Admins can read all transactions.
      allow read: if isAdmin();
      // Authenticated users can create their own transactions.
      allow create: if request.auth.uid != null;
    }
    
    match /announcements/{announcementId} {
      // Anyone can read announcements (for the popup).
      allow read: if true;
      // Only admins can create, update, or delete announcements.
      allow write: if isAdmin();
    }
  }
}
