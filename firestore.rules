rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Global helper function to check if the requesting user is an admin.
    function isGlobalAdmin() {
      return request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // A user can manage their own document. Admins can manage any user document.
      allow read, update: if request.auth.uid == userId || isGlobalAdmin();

      // New users can create their own document. Admins can also create users.
      allow create: if request.auth.uid == userId || isGlobalAdmin();

      // Only admins can delete user documents.
      allow delete: if isGlobalAdmin();
      
      // Rules for user-specific export history
      match /exports/{docId} {
        // A user can create and read their own export history.
        // Admins can also read a user's export history.
        allow create: if request.auth.uid == userId;
        allow read: if request.auth.uid == userId || isGlobalAdmin();
      }
    }
    
    // Rules for the 'workspaces' collection
    match /workspaces/{userId} {
        // A user can read and write to their own workspace. Admins can too.
        allow read, write: if request.auth.uid == userId || isGlobalAdmin();
    }

    // Rules for the 'transactions' collection
    match /transactions/{transactionId} {
        // Any authenticated user can create a transaction (e.g., when subscribing).
        allow create: if request.auth != null;
        
        // Only admins can manage transaction records.
        allow read, update, delete: if isGlobalAdmin();
    }
    
    // Rules for the 'announcements' collection
    match /announcements/{announcementId} {
        // Anyone can read announcements.
        allow read: if true;
        // Only admins can write announcements.
        allow write: if isGlobalAdmin();
    }

    // Rules for the 'promoCodes' collection
    match /promoCodes/{promoId} {
        // Authenticated users can read promo codes to verify them. Admins can too.
        allow read: if request.auth != null;
        
        // Admins can create and delete promo codes.
        allow create, delete: if isGlobalAdmin();
        
        // Admins can update any field. Users can only redeem.
        allow update: if isGlobalAdmin() || 
          (request.auth != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['usedCount', 'redeemedBy']));
    }
    
    // Rules for the 'settings' collection
    match /settings/{settingId} {
        // Anyone can read global settings (for pricing, etc.).
        allow read: if true;
        // Only admins can write settings.
        allow write: if isGlobalAdmin();
    }

    // Rules for the 'exports' collection (for public verification)
    match /exports/{docId} {
        // Anyone can read an export record to verify a document.
        allow read: if true;
        
        // Any authenticated user can create an export record when they export a file.
        allow create: if request.auth != null;
    }
  }
}
