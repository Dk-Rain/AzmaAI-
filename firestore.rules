
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for the 'users' collection
    match /users/{userId} {
      // A user can read/update their own data. Admins can read/update any user's data.
      allow read, update: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
      
      // Any authenticated user can create their own user document on signup. Admins can also create users.
      allow create: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
      
      // Only Admins can delete users.
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';

      // Rules for a user's personal export history
      match /exports/{docId} {
        // A user can create and read their own export history records.
        allow read, create: if request.auth.uid == userId;
      }
    }
    
    // Rules for the 'workspaces' collection
    match /workspaces/{userId} {
        // A user can read and write to their own workspace. Admins can manage any workspace.
        allow read, write: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Rules for the 'transactions' collection
    match /transactions/{transactionId} {
        // Authenticated users can create their own transactions (when subscribing).
        allow create: if request.auth != null;
        
        // Only admins can read, update, or delete transaction records.
        allow read, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
    
    // Rules for the 'announcements' collection
    match /announcements/{announcementId} {
        // Anyone can read announcements.
        allow read: if true;
        
        // Only admins can create, update, or delete announcements.
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Rules for the 'promoCodes' collection
    match /promoCodes/{promoId} {
        // Authenticated users can read promo codes to verify them.
        allow read: if request.auth != null;
        
        // Only Admins can write promo codes.
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
    
    // Rules for the 'settings' collection
    match /settings/{settingId} {
        // Allow anyone to read the global settings document.
        allow read: if true;

        // Only admins can write to the settings document.
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Rules for the global 'exports' collection (for public verification)
    match /exports/{docId} {
        // Anyone can read a document export record to verify its authenticity.
        allow read: if true;
        
        // Any authenticated user can create an export record when they download a document.
        allow create: if request.auth != null;
    }
  }
}
