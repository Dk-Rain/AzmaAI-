
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own user document (on signup)
      allow create: if request.auth != null && request.auth.uid == userId;

      // Users can only read their own document
      // Admins can read any user document
      allow get: if request.auth != null && (request.auth.uid == userId || isAdmin());

      // Users can only update their own document
      // Admins can update any user document
      allow update: if request.auth != null && (request.auth.uid == userId || isAdmin());

      // Only admins can delete user documents
      allow delete: if isAdmin();
    }
    
    // Rules for the 'workspaces' collection
    match /workspaces/{userId} {
        // A user can create, read, update, and delete their own workspace document
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Rules for the 'transactions' collection
    match /transactions/{transactionId} {
        // Any authenticated user can create a transaction (e.g., when they subscribe)
        allow create: if request.auth != null;
        
        // Only admins can view the full list of transactions
        allow list, get: if isAdmin();
        
        // Transactions should generally be immutable, so updates and deletes are disallowed for everyone.
        // You could allow admins to update if necessary, e.g., to change a status manually.
        allow update, delete: if false; 
    }
    
    // Rules for the 'announcements' collection
    match /announcements/{announcementId} {
        // Anyone can read announcements (for the popup)
        allow get, list: if true;
        
        // Only admins can create, update, or delete announcements
        allow write: if isAdmin();
    }
    
    // Rules for the 'promoCodes' collection
    match /promoCodes/{promoCodeId} {
        // Authenticated users can read promo codes to verify them
        allow get, list: if request.auth != null;

        // Only admins can create, update, or delete promo codes
        allow write: if isAdmin();
    }
  }
}
