rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      // Users can read their own data, and admins can read any user's data
      allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin');
      // Users can only create their own account
      allow create: if request.auth != null && request.auth.uid == userId;
      // Users can update their own data. Admin role cannot be changed by user.
      allow update: if request.auth != null && (request.auth.uid == userId && request.resource.data.role == resource.data.role);
      // Only admins can delete users
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    match /workspaces/{userId} {
        // Users can read and write to their own workspace.
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Only admins can read/write global settings
    match /settings/global {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Admins can manage announcements. All users can read them.
    match /announcements/{announcementId} {
        allow read: if true;
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
    
    // Admins can manage transactions. Regular users cannot access this collection directly.
    match /transactions/{transactionId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
        // Allow users to create their own transactions (e.g. on upgrade)
        allow create: if request.auth != null;
    }
    
    match /promoCodes/{code} {
      // Any authenticated user can read a promo code to verify it
      allow read: if request.auth != null;
      // Only admins can create or delete codes, but authenticated users can update (redeem) them.
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
      allow update: if request.auth != null;
    }
    
    // Allow public read on document history for verification
    match /document_history/{docId} {
      allow read: if true;
      allow write: if false; // Nobody can write/delete history from client
    }
  }
}
